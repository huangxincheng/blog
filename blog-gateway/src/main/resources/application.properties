server.port=8080
# http://localhost:8083/user/blog-user/user/get/1
# 路由请求 = {routeAddress}/{predicates}/{service-spring-application-name}/{interface}
#spring.cloud.gateway.routes[0].id=blog-user
#spring.cloud.gateway.routes[0].uri=lb://blog-user
#spring.cloud.gateway.routes[0].predicates[0]=Path=/user/**
#spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

#是否与服务发现组件进行结合，转发到具体的服务实例。默认为false，设为true便开启通过服务中心的自动根据创建路由的功能。
#路由访问方式：http://localhost:8083/blog-user/blog-user/user/get/1
#路由访问方式: ${GatewayUrl}:${GatewayPort}/{服务的applicationName}/{服务的tomcat前缀}/{服务的mapping}
spring.cloud.gateway.discovery.locator.enabled=true

# http://localhost:8083/baidu
spring.cloud.gateway.routes[0].id=baidu
spring.cloud.gateway.routes[0].uri=http://www.baidu.com:80/
# 跳转主要看predicates
spring.cloud.gateway.routes[0].predicates=Path=/baidu

logging.level.root=info
logging.level.org.springframework.cloud.gateway=trace
logging.level.org.springframework.http.server.reactive=debug
logging.level.org.springframework.web.reactive=debug
logging.level.reactor.ipc.netty=debug

